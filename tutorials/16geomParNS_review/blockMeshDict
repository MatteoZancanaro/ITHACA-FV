/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     |                                                 |
|   \\  /    A nd           | Copyright (C) 2018 Ehsan Madadi-Kandjani        |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format    ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //











// Returns a zero array


// Returns a zero array with commas in the middle of it


// Returns a linear  array with commas (initial point, last point, number of segments, c)

  
// Returns a y_t with commas (arrayX, number of segments, t, c)


// Returns a y_c with commas (arrayX, number of segments, m, p, c)


// Returns a theta with commas (arrayX, number of segments, m, p, c)

      
// Returns a xu with commas (arrayX, arrayYt, arrayTheta, number of segments)


// Returns a yu with commas (arrayYc, arrayYt, arrayTheta, number of segments)

      
// Returns a xl with commas (arrayX, arrayYt, arrayTheta, number of segments)


// Returns a yl with commas (arrayYc, arrayYt, arrayTheta, number of segments)

      
// Include angle of attack (arrayXu, arrayYu, alpha, number of segments)

      

      
// Include angle of attack (arrayXl, arrayYl, alpha, number of segments)

      

      
// Xu with comma to obtain Cmax (arrayXu, arrayYu, alpha, number of segments)



      
// Include angle of attack (arrayXl, arrayYl, alpha, number of segments)

      

      
// Returns the index of maximum array (Yc, Yt, p, number of segments)

      

      


      
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1.0;

//NACA airfoil geometry

//Chord length


//Angle of attack (in radian)


//NACA digits





//Mesh

//Height of mesh in y direction


//Length of downstream


//Foil depth in z direction perpendicular to x-y surface


//Scale factor (the mesh is normalized to have chord length equal to one)


//Number of cells and points at each direction and element

//Number of cells in y direction


//Number of cells in downstream


//Number of cells in z direction


//Number of meshes on the front part of airfoil edges p8-p9 and p8-p10b TODO calc it based on number of elements on the spline


//Number of meshes on the back part of airfoil edges p9-p11 and p10-p11 TODO calc it based on number of elements on the spline


//Number of interpolation points along the airfoil for defining the splines


//Cell expansion ratios

//Expansion ratio in y direction


//Expansion ratio in downstream side


//Expansion ratio in inlet


//Expansion ratio in inlet2



//Expansion ratio in y



// Base z


// Depth of airfoil


// Front z


// m,p, and t values for the airfoil




// Calculate x array



             (0, 0.000986635785864221, 0.00394264934276106, 0.00885637463565564, 0.0157084194356845, 0.0244717418524232, 0.0351117570558743, 0.0475864737669903, 0.0618466599780682, 0.0778360372489925, 0.0954915028125263, 0.114743378612105, 0.135515686289294, 0.157726447035656, 0.181288005125655, 0.206107373853763, 0.232086602510502, 0.259123162949142, 0.287110354217464, 0.315937723657661, 0.345491502812526, 0.375655056417573, 0.406309342707138, 0.437333383217848, 0.468604740235343, 0.5, 0.531395259764657, 0.562666616782152, 0.593690657292862, 0.624344943582427, 0.654508497187474, 0.684062276342339, 0.712889645782536, 0.740876837050858, 0.767913397489498, 0.793892626146236, 0.818711994874345, 0.842273552964344, 0.864484313710706, 0.885256621387895, 0.904508497187474, 0.922163962751008, 0.938153340021932, 0.95241352623301, 0.964888242944126, 0.975528258147577, 0.984291580564316, 0.991143625364344, 0.996057350657239, 0.999013364214136, 1)

         
      

// Calculate yt array



             (0, 0.00552071776149203, 0.0108841700338554, 0.016078484405345, 0.0210879078817696, 0.0258933131748528, 0.0304728709122419, 0.0348028556089295, 0.0388585471193284, 0.0426151852214058, 0.0460489331691627, 0.0491378065581875, 0.0518625266195847, 0.0542072619011511, 0.0561602289067088, 0.0577141302439613, 0.058866417705252, 0.0596193769580459, 0.0599800396244603, 0.0599599369724859, 0.0595747167654136, 0.0588436506357624, 0.0577890633783328, 0.0564357176193557, 0.0548101873618771, 0.0529402520005716, 0.0508543387269876, 0.0485810360958897, 0.0461486952646219, 0.0435851284782133, 0.0409174072117436, 0.0381717554581088, 0.0353735273961508, 0.0325472534694325, 0.0297167350510767, 0.0269051655718002, 0.0241352553473252, 0.0214293383480365, 0.0188094416905726, 0.0162973024821852, 0.0139143215157862, 0.0116814488365682, 0.00961900198270811, 0.00774642333541629, 0.00608198810664274, 0.00464247869778895, 0.00344284419671325, 0.00249586544350234, 0.00181184628433023, 0.00139835034583636, 0.00125999999999998)

         
      

// Calculate camber


// Calculate theta


// Calculate upper surface x components


// Calculate upper surface y components


// Calculate lower surface x components


// Calculate lower surface y components







// define Cmax


// Move the airfoil





























//Define the points for the inlet arc allocation


















// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //



// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

vertices
(
    (-7.71288964578254 0 0) // Vertex p00b = 0 
    (0.287110354217464 -8 0) // Vertex p01b = 1 
    (1 -8 0) // Vertex p02b = 2 
    (16.0 -8 0) // Vertex p03b = 3 
    (16.0 -0.00125999999999998 0) // Vertex p04b = 4 
    (16.0 8.0 0) // Vertex p05b = 5 
    (1 8.0 0) // Vertex p06b = 6 
    (0.287110354217464 8.0 0) // Vertex p07b = 7 
    (0 0 0) // Vertex p08b = 8 
    (0.287110354217464 0.0599800396244603 0) // Vertex p09b = 9 
    (0.287110354217464 -0.0599800396244603 0) // Vertex p10b = 10 
    (1 -0.00125999999999998 0) // Vertex p11b = 11 
    
    (-7.71288964578254 0 0.05) // Vertex p00t = 12 
    (0.287110354217464 -8 0.05) // Vertex p01t = 13 
    (1 -8 0.05) // Vertex p02t = 14 
    (16.0 -8 0.05) // Vertex p03t = 15 
    (16.0 -0.00125999999999998 0.05) // Vertex p04t = 16 
    (16.0 8.0 0.05) // Vertex p05t = 17 
    (1 8.0 0.05) // Vertex p06t = 18 
    (0.287110354217464 8.0 0.05) // Vertex p07t = 19 
    (0 0 0.05) // Vertex p08t = 20 
    (0.287110354217464 0.0599800396244603 0.05) // Vertex p09t = 21 
    (0.287110354217464 -0.0599800396244603 0.05) // Vertex p10t = 22 
    (1 -0.00125999999999998 0.05) // Vertex p11t = 23 
);

blocks
(
    //B0
    hex (0 1 10 8 12 13 22 20)
    square
    (50 100 1)
    simpleGrading (5 0.02 1)
    
    //B1
    hex (1 2 11 10 13 14 23 22)
    square
    (71 100 1)
    simpleGrading (0.2 0.02 1)
    
    //B2
    hex (2 3 4 11 14 15 16 23)
    square
    (100 100 1)
    simpleGrading (100 0.02 1)
    
    //B3
    hex (11 4 5 6 23 16 17 18)
    square
    (100 100 1)
    simpleGrading (100 50 1)
    
    //B4
    hex (9 11 6 7 21 23 18 19)
    square
    (71 100 1)
    simpleGrading (0.2 50 1)
    
    //B5
    hex (8 9 7 0 20 21 19 12)
    square
    (50 100 1)
    simpleGrading (5 50 1)
);

edges
(
    //Inlet arc
    arc 0 7 (-5.36974389527492 5.65685424949238 0)
    arc 0 1 (-5.36974389527492 -5.65685424949238 0)

    arc 12 19 (-5.36974389527492 5.65685424949238 0.05)
    arc 12 13 (-5.36974389527492 -5.65685424949238 0.05)
    
    //Airfoil surface spline
    spline 8 10 
             (( 0.000986635785864221 -0.00552071776149203 0 ) ( 0.00394264934276106 -0.0108841700338554 0 ) ( 0.00885637463565564 -0.016078484405345 0 ) ( 0.0157084194356845 -0.0210879078817696 0 ) ( 0.0244717418524232 -0.0258933131748528 0 ) ( 0.0351117570558743 -0.0304728709122419 0 ) ( 0.0475864737669903 -0.0348028556089295 0 ) ( 0.0618466599780682 -0.0388585471193284 0 ) ( 0.0778360372489925 -0.0426151852214058 0 ) ( 0.0954915028125263 -0.0460489331691627 0 ) ( 0.114743378612105 -0.0491378065581875 0 ) ( 0.135515686289294 -0.0518625266195847 0 ) ( 0.157726447035656 -0.0542072619011511 0 ) ( 0.181288005125655 -0.0561602289067088 0 ) ( 0.206107373853763 -0.0577141302439613 0 ) ( 0.232086602510502 -0.058866417705252 0 ) ( 0.259123162949142 -0.0596193769580459 0 ))
         
      
    spline 10 11 
             (( 0.315937723657661 -0.0599599369724859 0 ) ( 0.345491502812526 -0.0595747167654136 0 ) ( 0.375655056417573 -0.0588436506357624 0 ) ( 0.406309342707138 -0.0577890633783328 0 ) ( 0.437333383217848 -0.0564357176193557 0 ) ( 0.468604740235343 -0.0548101873618771 0 ) ( 0.5 -0.0529402520005716 0 ) ( 0.531395259764657 -0.0508543387269876 0 ) ( 0.562666616782152 -0.0485810360958897 0 ) ( 0.593690657292862 -0.0461486952646219 0 ) ( 0.624344943582427 -0.0435851284782133 0 ) ( 0.654508497187474 -0.0409174072117436 0 ) ( 0.684062276342339 -0.0381717554581088 0 ) ( 0.712889645782536 -0.0353735273961508 0 ) ( 0.740876837050858 -0.0325472534694325 0 ) ( 0.767913397489498 -0.0297167350510767 0 ) ( 0.793892626146236 -0.0269051655718002 0 ) ( 0.818711994874345 -0.0241352553473252 0 ) ( 0.842273552964344 -0.0214293383480365 0 ) ( 0.864484313710706 -0.0188094416905726 0 ) ( 0.885256621387895 -0.0162973024821852 0 ) ( 0.904508497187474 -0.0139143215157862 0 ) ( 0.922163962751008 -0.0116814488365682 0 ) ( 0.938153340021932 -0.00961900198270811 0 ) ( 0.95241352623301 -0.00774642333541629 0 ) ( 0.964888242944126 -0.00608198810664274 0 ) ( 0.975528258147577 -0.00464247869778895 0 ) ( 0.984291580564316 -0.00344284419671325 0 ) ( 0.991143625364344 -0.00249586544350234 0 ) ( 0.996057350657239 -0.00181184628433023 0 ) ( 0.999013364214136 -0.00139835034583636 0 ))
         
      
    spline 8 9 
             (( 0.000986635785864221 0.00552071776149203 0 ) ( 0.00394264934276106 0.0108841700338554 0 ) ( 0.00885637463565564 0.016078484405345 0 ) ( 0.0157084194356845 0.0210879078817696 0 ) ( 0.0244717418524232 0.0258933131748528 0 ) ( 0.0351117570558743 0.0304728709122419 0 ) ( 0.0475864737669903 0.0348028556089295 0 ) ( 0.0618466599780682 0.0388585471193284 0 ) ( 0.0778360372489925 0.0426151852214058 0 ) ( 0.0954915028125263 0.0460489331691627 0 ) ( 0.114743378612105 0.0491378065581875 0 ) ( 0.135515686289294 0.0518625266195847 0 ) ( 0.157726447035656 0.0542072619011511 0 ) ( 0.181288005125655 0.0561602289067088 0 ) ( 0.206107373853763 0.0577141302439613 0 ) ( 0.232086602510502 0.058866417705252 0 ) ( 0.259123162949142 0.0596193769580459 0 ))
         
      
    spline 9 11 
             (( 0.315937723657661 0.0599599369724859 0 ) ( 0.345491502812526 0.0595747167654136 0 ) ( 0.375655056417573 0.0588436506357624 0 ) ( 0.406309342707138 0.0577890633783328 0 ) ( 0.437333383217848 0.0564357176193557 0 ) ( 0.468604740235343 0.0548101873618771 0 ) ( 0.5 0.0529402520005716 0 ) ( 0.531395259764657 0.0508543387269876 0 ) ( 0.562666616782152 0.0485810360958897 0 ) ( 0.593690657292862 0.0461486952646219 0 ) ( 0.624344943582427 0.0435851284782133 0 ) ( 0.654508497187474 0.0409174072117436 0 ) ( 0.684062276342339 0.0381717554581088 0 ) ( 0.712889645782536 0.0353735273961508 0 ) ( 0.740876837050858 0.0325472534694325 0 ) ( 0.767913397489498 0.0297167350510767 0 ) ( 0.793892626146236 0.0269051655718002 0 ) ( 0.818711994874345 0.0241352553473252 0 ) ( 0.842273552964344 0.0214293383480365 0 ) ( 0.864484313710706 0.0188094416905726 0 ) ( 0.885256621387895 0.0162973024821852 0 ) ( 0.904508497187474 0.0139143215157862 0 ) ( 0.922163962751008 0.0116814488365682 0 ) ( 0.938153340021932 0.00961900198270811 0 ) ( 0.95241352623301 0.00774642333541629 0 ) ( 0.964888242944126 0.00608198810664274 0 ) ( 0.975528258147577 0.00464247869778895 0 ) ( 0.984291580564316 0.00344284419671325 0 ) ( 0.991143625364344 0.00249586544350234 0 ) ( 0.996057350657239 0.00181184628433023 0 ) ( 0.999013364214136 0.00139835034583636 0 ))
         
      
    
    spline 20 22 
             (( 0.000986635785864221 -0.00552071776149203 0.05 ) ( 0.00394264934276106 -0.0108841700338554 0.05 ) ( 0.00885637463565564 -0.016078484405345 0.05 ) ( 0.0157084194356845 -0.0210879078817696 0.05 ) ( 0.0244717418524232 -0.0258933131748528 0.05 ) ( 0.0351117570558743 -0.0304728709122419 0.05 ) ( 0.0475864737669903 -0.0348028556089295 0.05 ) ( 0.0618466599780682 -0.0388585471193284 0.05 ) ( 0.0778360372489925 -0.0426151852214058 0.05 ) ( 0.0954915028125263 -0.0460489331691627 0.05 ) ( 0.114743378612105 -0.0491378065581875 0.05 ) ( 0.135515686289294 -0.0518625266195847 0.05 ) ( 0.157726447035656 -0.0542072619011511 0.05 ) ( 0.181288005125655 -0.0561602289067088 0.05 ) ( 0.206107373853763 -0.0577141302439613 0.05 ) ( 0.232086602510502 -0.058866417705252 0.05 ) ( 0.259123162949142 -0.0596193769580459 0.05 ))
         
      
    spline 22 23 
             (( 0.315937723657661 -0.0599599369724859 0.05 ) ( 0.345491502812526 -0.0595747167654136 0.05 ) ( 0.375655056417573 -0.0588436506357624 0.05 ) ( 0.406309342707138 -0.0577890633783328 0.05 ) ( 0.437333383217848 -0.0564357176193557 0.05 ) ( 0.468604740235343 -0.0548101873618771 0.05 ) ( 0.5 -0.0529402520005716 0.05 ) ( 0.531395259764657 -0.0508543387269876 0.05 ) ( 0.562666616782152 -0.0485810360958897 0.05 ) ( 0.593690657292862 -0.0461486952646219 0.05 ) ( 0.624344943582427 -0.0435851284782133 0.05 ) ( 0.654508497187474 -0.0409174072117436 0.05 ) ( 0.684062276342339 -0.0381717554581088 0.05 ) ( 0.712889645782536 -0.0353735273961508 0.05 ) ( 0.740876837050858 -0.0325472534694325 0.05 ) ( 0.767913397489498 -0.0297167350510767 0.05 ) ( 0.793892626146236 -0.0269051655718002 0.05 ) ( 0.818711994874345 -0.0241352553473252 0.05 ) ( 0.842273552964344 -0.0214293383480365 0.05 ) ( 0.864484313710706 -0.0188094416905726 0.05 ) ( 0.885256621387895 -0.0162973024821852 0.05 ) ( 0.904508497187474 -0.0139143215157862 0.05 ) ( 0.922163962751008 -0.0116814488365682 0.05 ) ( 0.938153340021932 -0.00961900198270811 0.05 ) ( 0.95241352623301 -0.00774642333541629 0.05 ) ( 0.964888242944126 -0.00608198810664274 0.05 ) ( 0.975528258147577 -0.00464247869778895 0.05 ) ( 0.984291580564316 -0.00344284419671325 0.05 ) ( 0.991143625364344 -0.00249586544350234 0.05 ) ( 0.996057350657239 -0.00181184628433023 0.05 ) ( 0.999013364214136 -0.00139835034583636 0.05 ))
         
      
    spline 20 21 
             (( 0.000986635785864221 0.00552071776149203 0.05 ) ( 0.00394264934276106 0.0108841700338554 0.05 ) ( 0.00885637463565564 0.016078484405345 0.05 ) ( 0.0157084194356845 0.0210879078817696 0.05 ) ( 0.0244717418524232 0.0258933131748528 0.05 ) ( 0.0351117570558743 0.0304728709122419 0.05 ) ( 0.0475864737669903 0.0348028556089295 0.05 ) ( 0.0618466599780682 0.0388585471193284 0.05 ) ( 0.0778360372489925 0.0426151852214058 0.05 ) ( 0.0954915028125263 0.0460489331691627 0.05 ) ( 0.114743378612105 0.0491378065581875 0.05 ) ( 0.135515686289294 0.0518625266195847 0.05 ) ( 0.157726447035656 0.0542072619011511 0.05 ) ( 0.181288005125655 0.0561602289067088 0.05 ) ( 0.206107373853763 0.0577141302439613 0.05 ) ( 0.232086602510502 0.058866417705252 0.05 ) ( 0.259123162949142 0.0596193769580459 0.05 ))
         
      
    spline 21 23 
             (( 0.315937723657661 0.0599599369724859 0.05 ) ( 0.345491502812526 0.0595747167654136 0.05 ) ( 0.375655056417573 0.0588436506357624 0.05 ) ( 0.406309342707138 0.0577890633783328 0.05 ) ( 0.437333383217848 0.0564357176193557 0.05 ) ( 0.468604740235343 0.0548101873618771 0.05 ) ( 0.5 0.0529402520005716 0.05 ) ( 0.531395259764657 0.0508543387269876 0.05 ) ( 0.562666616782152 0.0485810360958897 0.05 ) ( 0.593690657292862 0.0461486952646219 0.05 ) ( 0.624344943582427 0.0435851284782133 0.05 ) ( 0.654508497187474 0.0409174072117436 0.05 ) ( 0.684062276342339 0.0381717554581088 0.05 ) ( 0.712889645782536 0.0353735273961508 0.05 ) ( 0.740876837050858 0.0325472534694325 0.05 ) ( 0.767913397489498 0.0297167350510767 0.05 ) ( 0.793892626146236 0.0269051655718002 0.05 ) ( 0.818711994874345 0.0241352553473252 0.05 ) ( 0.842273552964344 0.0214293383480365 0.05 ) ( 0.864484313710706 0.0188094416905726 0.05 ) ( 0.885256621387895 0.0162973024821852 0.05 ) ( 0.904508497187474 0.0139143215157862 0.05 ) ( 0.922163962751008 0.0116814488365682 0.05 ) ( 0.938153340021932 0.00961900198270811 0.05 ) ( 0.95241352623301 0.00774642333541629 0.05 ) ( 0.964888242944126 0.00608198810664274 0.05 ) ( 0.975528258147577 0.00464247869778895 0.05 ) ( 0.984291580564316 0.00344284419671325 0.05 ) ( 0.991143625364344 0.00249586544350234 0.05 ) ( 0.996057350657239 0.00181184628433023 0.05 ) ( 0.999013364214136 0.00139835034583636 0.05 ))
         
      
    
);

patches
(
    wall airfoil
    (
        (8 10 22 20)
        (10 11 23 22)
        (8 9 21 20)
        (9 11 23 21)
    )
    
    patch farBoundaries
    (
        (6 7 19 18)
        (5 6 18 17)
        (2 3 15 14)
        (1 2 14 13)
    )
    
    patch inlet
    (
        (7 0 12 19)
        (0 1 13 12)
    )
    
    patch outlet
    (
        (4 5 17 16)
        (3 4 16 15)
    )
);

mergePatchPairs
(
);
